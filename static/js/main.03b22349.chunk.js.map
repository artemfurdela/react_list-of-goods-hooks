{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortTypeInFuntion","isReversedInFunction","visibleGoods","ALPABET","sort","LENGTH","g1","g2","length","reverse","App","useState","isStarted","setStart","NONE","sortType","setSortType","isReversed","setReverse","className","type","onClick","hidden","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAEzB,QAAQ,GACN,KAAKC,IAAsBJ,EAASO,QAClCD,EAAaE,OACb,MACF,KAAKJ,IAAsBJ,EAASS,OAClCH,EAAaE,MAAK,SAACE,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAUjD,OAJIP,GACFC,EAAaO,UAGRP,G,SA5BJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+BE,IAAMc,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAASf,EAASkB,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCL,oBAAS,GAA1C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMR,GAAUD,IACzBU,OAAQV,EAHV,mBAQCA,GACC,qCACE,wBACEQ,KAAK,SACLC,QAAS,kBAAML,EAAYpB,EAASO,UAFtC,iCAOA,wBACEiB,KAAK,SACLC,QAAS,kBAAML,EAAYpB,EAASS,SAFtC,4BAOA,wBACEe,KAAK,SACLC,QAAS,kBAAMH,GAAYD,IAF7B,qBAOA,wBACEG,KAAK,SACLC,QAAS,WACPH,GAAW,GACXF,EAAYpB,EAASkB,OAJzB,mBAUA,oBAAIK,UAAU,QAAd,SACGrB,EAAkBD,EAAiBkB,EAAUE,GAC3CM,KAAI,SAAAC,GAAI,OACP,oBACEL,UAAU,cADZ,SAIGK,GAFIA,eClGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03b22349.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortTypeInFuntion: SortType,\n  isReversedInFunction: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (true) {\n    case sortTypeInFuntion === SortType.ALPABET:\n      visibleGoods.sort();\n      break;\n    case sortTypeInFuntion === SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversedInFunction) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <button\n        type=\"button\"\n        onClick={() => setStart(!isStarted)}\n        hidden={isStarted}\n      >\n        Start\n      </button>\n\n      {isStarted && (\n        <>\n          <button\n            type=\"button\"\n            onClick={() => setSortType(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setReverse(!isReversed)}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              setReverse(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {getReorderedGoods(goodsFromServer, sortType, isReversed)\n              .map(good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}